group 'com.softeam'

repositories {
    maven {
        url 'https://nexus.k8.wildwidewest.xyz/repository/maven-public/'
        credentials {
            username nexusUsername
            password nexusPassword
        }
    }
}

buildscript {
    ext.kotlin_version = '1.1.51'
    ext.spring_boot_version = '2.0.5.RELEASE'

    repositories {

        maven {
            url 'https://nexus.k8.wildwidewest.xyz/repository/maven-public/'
            credentials {
                username nexusUsername
                password nexusPassword
            }
        }

        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$spring_boot_version"
        classpath 'io.spring.gradle:dependency-management-plugin:0.5.6.RELEASE'
        classpath 'org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.6.2'
        classpath 'net.researchgate:gradle-release:2.6.0'
    }
}

apply plugin: 'kotlin'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.sonarqube'
apply plugin: 'maven-publish'
apply plugin: 'net.researchgate.release'

bootJar.archiveName = 'api-gateway.jar'

dependencyManagement {
    imports {
        mavenBom 'org.springframework.cloud:spring-cloud-netflix:1.3.5.RELEASE'
    }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'org.springframework.cloud:spring-cloud-starter-zuul'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

publishing {
    publications {
        maven(MavenPublication) {

            from components.java

            repositories {
                maven {

                    if (project.version.endsWith('-SNAPSHOT')) {
                        url "https://nexus.k8.wildwidewest.xyz/repository/maven-snapshots/"
                    } else {
                        url "https://nexus.k8.wildwidewest.xyz/repository/maven-releases/"
                    }

                    credentials {
                        username nexusUsername
                        password nexusPassword
                    }
                }
            }
        }
    }
}

release {
    failOnUnversionedFiles = false
    versionPropertyFile = 'version.properties'
}

afterReleaseBuild.dependsOn publish